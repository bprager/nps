schema {
  query: Query
  mutation: Mutation
}

scalar DateTime

type Query {
  survey(id: ID!): Survey!
  allSurveys: [Survey!]!
  user(id: ID!): User!
  users(tags: [ID!], categories: [ID!], org: ID!): [User!]!
  allUsers: [User!]!
  allOrgs: [Org!]!
  allCategories: [Category!]!
  allTags: [Tag!]!
}

type Mutation {
  addOrg(name: String!): Boolean!
  addCategory(name: String!, parent: ID): Boolean!
  addTag(
    name: String!
    attribute: String
    number: Int
    timestamp: DateTime
  ): Boolean!
  addUser(
    email: String
    firstName: String
    lastName: String
    nickName: String
  ): Boolean!
  changeUser(
    email: String
    firstName: String
    lastName: String
    nickName: String
  ): Boolean!
  changeCategory(name: String!, parent: ID): Boolean!
}

type Org {
  id: ID!
  name: String
}

type Category {
  id: ID!
  name: String
  parent: Category
}

type Tag {
  id: ID!
  name: String
  attribute: String
  number: Int
  timestamp: DateTime
}

type User {
  id: ID!
  email: String
  firstName: String
  lastName: String
  nickName: String
  orgs: [Org!]!
  tags: [Tag!]!
  categories: [Category!]!
}

type Question {
  id: ID!
  open: Boolean
  body: String
}

type Note {
  id: ID!
  text: String
  saved: DateTime!
}

type Survey {
  id: ID!
  start: DateTime
  end: DateTime
  scoreQuestion: Question
  openQuestion: Question
  note: Note
}
